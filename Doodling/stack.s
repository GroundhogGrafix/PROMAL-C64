WORD SSTACK; PTR TO STACKWORD SSTACKSIZEWORD SP; STACK POINTERPROC STACKINIT; INITIALIZE STACKARG WORD SPTR ARG WORD SSIZEBEGINSP=0SSTACK=SPTRSSTACKSIZE=SSIZEENDPROC PUSHSTR;  PUSH A STRING ON THE STACKARG WORD ITEMBEGINIF LENSTR(ITEM) > (SSTACKSIZE-SP)  EXIT"STACK OVERFLOW"MOVSTR ITEM, SSTACK+SPSP=SP+LENSTR(ITEM)+1ENDFUNC WORD POPSTR; PULL LAST STRING FROM STACKBEGINIF SP=0;  STACK IS EMPTY  RETURN 65535SP=SP-1; SKIP NULL CHARACTERREPEAT  SP=SP-1; DECREMENT STACK POINTERUNTIL SSTACK[SP]=0 OR SP=0; CHECK FOR NULLIF SP>0  SP=SP+1;RETURN #SSTACK[SP]; RETURN STACK POINTEREND